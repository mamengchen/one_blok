---
title: linux_虚拟内存详解
tags: MMU, 页表结构
grammar_cjkRuby: true
---


内存是程序运行的重要物质基础。如何在有限的内存空间运行较大的应用程序，曾是困扰人们的一个难题。为了解决这个问题，其中最成功的当属虚拟内存技术。

#### 虚拟内存
为了运行比实际物理内存容量还要大的程序，包括linux在内的所有现代操作系统几乎毫无例外的都采用了虚拟内存技术。虚拟内存技术，可让系统看上去具有比实际物理意义内存大的多的内存空间，并为实现多道程序的执行创制了条件。

#### 虚拟内存的概念
众所周知，为了对内存中的存储单元进行识别，内存中的每一个存储单元都必须有一个确切的地址。而一台计算机的处理器能访问多大的内存空间就取决于处理器的程序计数器，该计数器的字长越长，能访问的空间就越大。

例如：
![enter description here](./images/1563452704087.png)

照理说，为了充分利用处理器的寻址空间，就应按照处理器的最大寻址来为其分配系统的内存。如果处理器具有32位程序计数器，那么就应该按照下图的方式，为其配备4G的内存：

![20180714190307585](./images/20180714190307585.png)

这样，处理器所发出的每一个地址都会有一个真实的物理存储单元与之对应；同时，每一个物理存储单元都有唯一的地址与之对应。这显然是一种最理想的情况。

但遗憾的是，实际上计算机所配置内存的实际空间常常小于处理器的寻址范围，这是就会因处理器的一部分寻址空间没有对应的物理存储单元，从而导致处理器寻址能力的浪费。例如：如下图的系统中，具有32位寻址能力的处理器只配置了256M的内存储器，这就会造成大量的浪费：

![20180714190334823](./images/20180714190334823.png)